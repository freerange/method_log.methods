    def history(method_identifier, options = {})
      options = { stop_at_latest_introduction_of_method: true }.merge(options)
      Enumerator.new do |yielder|
        last_method_commit = nil
        @repository.commits(options).each do |commit|
          last_source_file = last_method_commit && last_method_commit.source_file
          if last_source_file && commit.contains?(last_source_file)
            last_method_commit.update(commit)
          else
            method_definition = commit.find(method_identifier)
            yielder << last_method_commit if last_method_commit
            last_method_commit = MethodCommit.new(commit, method_definition)
            yielder << last_method_commit
            break if options[:stop_at_latest_introduction_of_method] && method_definition.nil?
          end
        end
      end
    end